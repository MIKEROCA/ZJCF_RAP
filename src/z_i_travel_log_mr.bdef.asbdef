managed;
//strict ( 1 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for Z_I_TRAVEL_LOG_MR alias Travel
implementation in class zbp_i_travel_log_mr unique
persistent table ztravel_log_mr
lock master
authorization master ( instance )
etag master last_changed_at
{
  // administrative fields: read only
  field ( readonly ) last_changed_at, last_changed_by, created_at, created_by;
  // mandatory fields that are required to create a travel
  field (mandatory) agency_id, overall_status, booking_fee, currency_code;
  //dynamic field control
  field (features : instance) travel_id;

  create;
  update;
  delete;

  //validations
  validation validateCustomer on save { field customer_id; }
  validation validateDates on save { field begin_date, end_date; }
  validation validateStatus on save { field overall_status; }

  //actions
  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;
  action createTravelByTemplate result[1] $self;

  association _Booking { create; }

  mapping for ztravel_log_mr corresponding;
}

define behavior for Z_I_BOOKING_LOG_MR alias Booking
implementation in class zbp_i_booking_log_mr unique
persistent table zbooking_log_mr
lock dependent by _Travel
authorization dependent by _Travel
etag master last_change_at
{
  // static fields control
  field ( readonly ) travel_id;
  field ( mandatory ) carrier_id, connection_id, flight_date, booking_status;
  update;
  delete;

  //validations
  validation validateStatus on save { field booking_status; }

  //determinations
  determination calculateTotalFlightPrice on modify { field flight_price, currency_code; }


  association _Travel;
  association _BookingSupplement { create; }

  mapping for zbooking_log_mr corresponding;
}

define behavior for Z_I_BOOKSUPPL_LOG_MR alias Supplement
implementation in class zbp_i_booksuppl_log_mr unique
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{
  field ( readonly ) travel_id, booking_id;
  field ( mandatory ) supplement_id, price;
  update;
  delete;

  //determinations
  determination calculateTotalSupplPrice on modify { field price, currency; }

  association _Travel;
  association _Booking;

  mapping for zlog_jcf_mr corresponding;
}